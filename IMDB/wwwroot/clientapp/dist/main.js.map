{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/Shared/dataService.ts","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/movie/movieList.component.css","webpack:///./app/movie/movieList.component.html","webpack:///./app/movie/movieList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ4C;AACM;AACb;AAKrC;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG7B,WAAM,GAAa,EAAE,CAAC;IAD7B,CAAC;IAGD,gCAAU,GAAV;QAAA,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;aAC7B,IAAI,CAAC,0DAAG,CAAC,UAAC,IAAW;YACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACpB,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAZQ,WAAW;QADvB,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,WAAW,CAavB;IAAD,kBAAC;CAAA;AAbuB;;;;;;;;;;;;ACPxB,+PAA+P,OAAO,oF;;;;;;;;;;;;;;;;;;;;;ACA5N;AAO1C;IALA;QAME,UAAK,GAAG,MAAM,CAAC;IACjB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AAET;AACkB;AACd;AAgBnD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACV,2DAAY;gBACZ,6EAAkB;aACrB;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,qEAAgB;aACnB;YACC,SAAS,EAAE;gBACP,+DAAW;aAChB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtBtB,2CAA2C,yBAAyB,0BAA0B,2BAA2B,KAAK,yBAAyB,yBAAyB,0BAA0B,oBAAoB,KAAK,C;;;;;;;;;;;ACAnO,oOAAoO,YAAY,wEAAwE,QAAQ,8GAA8G,mCAAmC,sDAAsD,QAAQ,0DAA0D,qBAAqB,6E;;;;;;;;;;;;;;;;;;;;;;;;;ACA3iB;AACC;AAQpD;IAEI,4BAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAI9B,WAAM,GAAa,EAAE,CAAC;QAHzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC9B,CAAC;IAID,qCAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;aACjB,SAAS,CAAC,cAAI;YACP,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,CAAC;QACL,CAAC,CACJ,CAAC;IACV,CAAC;IAhBQ,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;;SAGzB,CAAC;yCAG4B,+DAAW;OAF5B,kBAAkB,CAiB9B;IAAD,yBAAC;CAAA;AAjB8B;;;;;;;;;;;;;ACT/B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","﻿import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IMovie } from \"./movie\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    public movies: IMovie[] = [];\r\n\r\n    loadMovies(): Observable<IMovie[]> {\r\n        return this.http.get(\"/api/movie\")\r\n            .pipe(map((data: any[]) => {\r\n                 this.movies = data;\r\n                return this.movies;\r\n            }));\r\n    }\r\n}","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n    <title>app.component</title>\\r\\n</head>\\r\\n<body>\\r\\n<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div>\\r\\n    <h1 style=\\\"text-align:center\\\">\\r\\n        Welcome to {{title}}!\\r\\n    </h1>\\r\\n    <movie-list></movie-list>\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'imdb-app',\n  templateUrl:'./app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'IMDB';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MovieListComponent } from './movie/movieList.component';\nimport { DataService } from './Shared/dataService';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      MovieListComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n    providers: [\n        DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".movie-info .movie-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.movie-info img {\\r\\n    max-width: 200px;\\r\\n    max-height: 200px;\\r\\n    float: left;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"movie-info col-md-4\\\" *ngFor=\\\"let m of movies\\\">\\r\\n        <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n        <img src=\\\"https://image.tmdb.org/t/p/w600_and_h900_bestv2{{ m.poster }}\\\" class=\\\"img-fluid\\\"/>\\r\\n\\r\\n            <div class=\\\"movie-name\\\">{{m.name}} </div>\\r\\n            <ul class=\\\"movie-props\\\">\\r\\n                <li><strong>Year  </strong>Released in {{m.releaseYear | date:'mediumDate'}}</li>\\r\\n                <li><strong>Plot  </strong>{{m.plot}}</li>\\r\\n                <li><strong>Producer  </strong>{{m.producerName.name}}</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/dataService\";\r\nimport { IMovie } from \"../Shared/movie\";\r\n\r\n@Component({\r\n    selector: \"movie-list\",\r\n    templateUrl: \"movieList.component.html\",\r\n    styleUrls: [\"movieList.component.css\"]\r\n})\r\nexport class MovieListComponent implements OnInit{\r\n   \r\n    constructor(private data: DataService) {\r\n        this.movies = data.movies;\r\n    }\r\n\r\n    public movies: IMovie[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadMovies()\r\n            .subscribe(data => {\r\n                    if (data) {\r\n                        this.movies = data;\r\n                    }\r\n                }\r\n            );\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}